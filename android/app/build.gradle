import java.text.SimpleDateFormat
import java.util.Date
plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}
def getEnvVar(String key) {
    def envFile = new File(rootDir.parentFile, ".env")
    if (envFile.exists()) {
        def props = new Properties()
        envFile.withInputStream { props.load(it) }
        def value = props.getProperty(key)
        if (value != null && !value.isEmpty()) {
            return value
        } else {
            throw new GradleException("A variável '$key' não foi encontrada ou está vazia no arquivo .env.")
        }
    } else {
        throw new GradleException("O arquivo .env não foi encontrado na raiz do projeto.")
    }
}

def getLocalProperty(String key) {
    def localPropertiesFile = file("../../android/local.properties")   
    if (localPropertiesFile.exists()) {
        def properties = new Properties()
        localPropertiesFile.withInputStream { properties.load(it) }
        def value = properties.getProperty(key)
        println "Propriedade '$key' encontrada: $value"
        return value
    } else {
        println "Arquivo 'local.properties' não encontrado."
        throw new GradleException("Arquivo 'local.properties' não encontrado.")
    }
}

android {
    namespace = 'br.com.servidorcaju.guaribas'
    compileSdkVersion = 35
    ndkVersion = "26.3.11579264"
    defaultConfig {
        applicationId = 'br.com.servidorcaju.guaribas'
        minSdkVersion = 21
        targetSdkVersion = 35
        versionCode 26
        versionName "5.0.11.5949"
        multiDexEnabled true
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86_64", "x86"
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }
    signingConfigs {
        release {
            storeFile file(getLocalProperty("storeFile"))
            storePassword getLocalProperty("storePassword")
            keyAlias getLocalProperty("keyAlias")
            keyPassword getLocalProperty("keyPassword")
        }
    }
   buildTypes {
    debug {
        signingConfig = signingConfigs.debug
    }
    release {
            signingConfig signingConfigs.release
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def appName = getEnvVar("NAME_APP")
                    def appVersion = getEnvVar("VERSAO")
                    if (appName == null || appVersion == null) {
                        throw new GradleException("As variáveis APP_TITLE e APP_VERSION não foram encontradas no arquivo .env.")
                    }
                    appName = appName.replaceAll("\"", "")
                    appVersion = appVersion.replaceAll("\"", "")
                    def dateFormat = new SimpleDateFormat("yyyyMMdd-HHmmss")
                    def dateStr = dateFormat.format(new Date())
                    def apkName = "${appName}-${appVersion}-${variant.buildType.name}-${dateStr}.apk"
                    outputFileName = apkName
                    println "outputFileName: $outputFileName"
                }
            }
        }
    }
}

flutter {
    source = "../.."
}

dependencies {
    implementation "androidx.multidex:multidex:2.0.1"
}